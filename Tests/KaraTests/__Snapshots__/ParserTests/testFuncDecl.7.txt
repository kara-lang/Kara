SyntaxNode(
  leadingTrivia: [],
  content: 0:0-0:52 FuncDecl(
    modifiers: [
      [0]: SyntaxNode(
        leadingTrivia: [],
        content: 0:0-0:5 DeclModifier.access(AccessControl.public)
      ),
      [1]: SyntaxNode(
        leadingTrivia: [
          [0]: Whitespace(" ")
        ],
        content: 0:7-0:24 DeclModifier.interop(
          InteropModifier(
            interopKeyword: SyntaxNode(
              leadingTrivia: [
                [0]: Whitespace(" ")
              ],
              content: 0:7-0:13 ()
            ),
            openParen: SyntaxNode(
              leadingTrivia: [],
              content: 0:14-0:14 ()
            ),
            language: SyntaxNode(
              leadingTrivia: [],
              content: 0:15-0:16 InteropModifier.Language.js
            ),
            comma: SyntaxNode(
              leadingTrivia: [],
              content: 0:17-0:17 ()
            ),
            externalName: SyntaxNode(
              leadingTrivia: [
                [0]: Whitespace(" ")
              ],
              content: 0:19-0:23 "fff"
            ),
            closeParen: SyntaxNode(
              leadingTrivia: [],
              content: 0:24-0:24 ()
            )
          )
        )
      )
    ],
    funcKeyword: SyntaxNode(
      leadingTrivia: [
        [0]: Whitespace(" ")
      ],
      content: 0:26-0:29 ()
    ),
    identifier: SyntaxNode(
      leadingTrivia: [
        [0]: Whitespace(" ")
      ],
      content: 0:31-0:31 Identifier(
        definitionSource: nil,
        value: "f"
      )
    ),
    genericParameters: [],
    parameters: DelimitedSequence(
      start: SyntaxNode(
        leadingTrivia: [],
        content: 0:32-0:32 ()
      ),
      elements: [
        [0]: DelimitedSequence.Element(
          content: SyntaxNode(
            leadingTrivia: [],
            content: 0:33-0:41 FuncDecl.Parameter(
              externalName: SyntaxNode(
                leadingTrivia: [],
                content: 0:33-0:33 Identifier(
                  definitionSource: nil,
                  value: "x"
                )
              ),
              internalName: SyntaxNode(
                leadingTrivia: [
                  [0]: Whitespace(" ")
                ],
                content: 0:35-0:35 Identifier(
                  definitionSource: nil,
                  value: "y"
                )
              ),
              colon: SyntaxNode(
                leadingTrivia: [],
                content: 0:36-0:36 ()
              ),
              type: SyntaxNode(
                leadingTrivia: [
                  [0]: Whitespace(" ")
                ],
                content: 0:38-0:41 Type.constructor(
                  TypeIdentifier(value: "Bool"),
                  []
                )
              )
            )
          ),
          separator: nil
        )
      ],
      end: SyntaxNode(
        leadingTrivia: [],
        content: 0:42-0:42 ()
      )
    ),
    returns: SyntaxNode(
      leadingTrivia: [
        [0]: Whitespace(" ")
      ],
      content: 0:47-0:52 Type.constructor(
        TypeIdentifier(value: "String"),
        []
      )
    ),
    body: nil
  )
)