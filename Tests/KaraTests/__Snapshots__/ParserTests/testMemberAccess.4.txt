SyntaxNode(
  leadingTrivia: [],
  content: 0:0-0:23 Expr.member(
    MemberAccess(
      base: SyntaxNode(
        leadingTrivia: [],
        content: 0:0-0:11 Expr.closure(
          Closure(
            openBrace: SyntaxNode(
              leadingTrivia: [],
              content: 0:0-0:0 ()
            ),
            parameters: [
              [0]: Closure.Parameter(
                identifier: SyntaxNode(
                  leadingTrivia: [],
                  content: 0:1-0:1 Identifier(value: "x")
                ),
                typeAnnotation: nil
              ),
              [1]: Closure.Parameter(
                identifier: SyntaxNode(
                  leadingTrivia: [],
                  content: 0:3-0:3 Identifier(value: "y")
                ),
                typeAnnotation: nil
              ),
              [2]: Closure.Parameter(
                identifier: SyntaxNode(
                  leadingTrivia: [],
                  content: 0:5-0:5 Identifier(value: "z")
                ),
                typeAnnotation: nil
              )
            ],
            inKeyword: SyntaxNode(
              leadingTrivia: [],
              content: 0:7-0:8 ()
            ),
            body: SyntaxNode(
              leadingTrivia: [],
              content: 0:10-0:10 Expr.literal(
                Literal.int32(1)
              )
            ),
            closeBrace: SyntaxNode(
              leadingTrivia: [],
              content: 0:11-0:11 ()
            )
          )
        )
      ),
      dot: SyntaxNode(
        leadingTrivia: [],
        content: 0:12-0:12 ()
      ),
      member: SyntaxNode(
        leadingTrivia: [],
        content: 0:13-0:23 MemberAccess.Member.identifier(
          Identifier(value: "description")
        )
      )
    )
  )
)