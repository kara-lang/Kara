SyntaxNode(
  leadingTrivia: [],
  content: 0:0-4:0 StructDecl(
    modifiers: [],
    structKeyword: SyntaxNode(
      leadingTrivia: [],
      content: 0:0-0:5 ()
    ),
    identifier: SyntaxNode(
      leadingTrivia: [],
      content: 0:7-0:22 Identifier(value: "StoredProperties")
    ),
    genericParameters: [],
    declarations: SyntaxNode(
      leadingTrivia: [
        [0]: Whitespace(" ")
      ],
      content: 0:24-4:0 DeclBlock(
        openBrace: SyntaxNode(
          leadingTrivia: [
            [0]: Whitespace(" ")
          ],
          content: 0:24-0:24 ()
        ),
        elements: [
          [0]: SyntaxNode(
            leadingTrivia: [
              [0]: Whitespace("\n  ")
            ],
            content: 1:2-1:6 Declaration.binding(
              BindingDecl(
                bindingKeyword: SyntaxNode(
                  leadingTrivia: [
                    [0]: Whitespace("\n  ")
                  ],
                  content: 1:2-1:4 ()
                ),
                identifier: SyntaxNode(
                  leadingTrivia: [
                    [0]: Whitespace(" ")
                  ],
                  content: 1:6-1:6 Identifier(value: "a")
                ),
                typeAnnotation: BindingDecl.TypeAnnotation(
                  colon: SyntaxNode(
                    leadingTrivia: [],
                    content: 1:7-1:7 ()
                  ),
                  signature: SyntaxNode(
                    leadingTrivia: [
                      [0]: Whitespace(" ")
                    ],
                    content: 1:9-1:11 Type.constructor(
                      Identifier(value: "Int"),
                      []
                    )
                  )
                ),
                value: nil
              )
            )
          ),
          [1]: SyntaxNode(
            leadingTrivia: [
              [0]: Whitespace("    "),
              [1]: Comment(
                kind: Comment.Kind.singleLine,
                isDocComment: false,
                content: " `a` comment"
              ),
              [2]: Whitespace("\n  ")
            ],
            content: 2:2-2:6 Declaration.binding(
              BindingDecl(
                bindingKeyword: SyntaxNode(
                  leadingTrivia: [
                    [0]: Whitespace("    "),
                    [1]: Comment(
                      kind: Comment.Kind.singleLine,
                      isDocComment: false,
                      content: " `a` comment"
                    ),
                    [2]: Whitespace("\n  ")
                  ],
                  content: 2:2-2:4 ()
                ),
                identifier: SyntaxNode(
                  leadingTrivia: [
                    [0]: Whitespace(" ")
                  ],
                  content: 2:6-2:6 Identifier(value: "b")
                ),
                typeAnnotation: BindingDecl.TypeAnnotation(
                  colon: SyntaxNode(
                    leadingTrivia: [],
                    content: 2:7-2:7 ()
                  ),
                  signature: SyntaxNode(
                    leadingTrivia: [
                      [0]: Whitespace(" ")
                    ],
                    content: 2:9-2:12 Type.constructor(
                      Identifier(value: "Bool"),
                      []
                    )
                  )
                ),
                value: nil
              )
            )
          ),
          [2]: SyntaxNode(
            leadingTrivia: [
              [0]: Whitespace("   "),
              [1]: Comment(
                kind: Comment.Kind.singleLine,
                isDocComment: false,
                content: " `b` comment"
              ),
              [2]: Whitespace("\n  ")
            ],
            content: 3:2-3:6 Declaration.binding(
              BindingDecl(
                bindingKeyword: SyntaxNode(
                  leadingTrivia: [
                    [0]: Whitespace("   "),
                    [1]: Comment(
                      kind: Comment.Kind.singleLine,
                      isDocComment: false,
                      content: " `b` comment"
                    ),
                    [2]: Whitespace("\n  ")
                  ],
                  content: 3:2-3:4 ()
                ),
                identifier: SyntaxNode(
                  leadingTrivia: [
                    [0]: Whitespace(" ")
                  ],
                  content: 3:6-3:6 Identifier(value: "c")
                ),
                typeAnnotation: BindingDecl.TypeAnnotation(
                  colon: SyntaxNode(
                    leadingTrivia: [],
                    content: 3:7-3:7 ()
                  ),
                  signature: SyntaxNode(
                    leadingTrivia: [
                      [0]: Whitespace(" ")
                    ],
                    content: 3:9-3:14 Type.constructor(
                      Identifier(value: "String"),
                      []
                    )
                  )
                ),
                value: nil
              )
            )
          )
        ],
        closeBrace: SyntaxNode(
          leadingTrivia: [
            [0]: Whitespace(" "),
            [1]: Comment(
              kind: Comment.Kind.singleLine,
              isDocComment: false,
              content: " `c` comment"
            ),
            [2]: Whitespace("\n")
          ],
          content: 4:0-4:0 ()
        )
      )
    )
  )
)