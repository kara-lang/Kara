SyntaxNode(
  leadingTrivia: [],
  content: 0:0-0:35 Expr(
    payload: Expr.Payload.member(
      MemberAccess(
        base: SyntaxNode(
          leadingTrivia: [],
          content: 0:0-0:23 Expr(
            payload: Expr.Payload.member(
              MemberAccess(
                base: SyntaxNode(
                  leadingTrivia: [],
                  content: 0:0-0:11 Expr(
                    payload: Expr.Payload.closure(
                      Closure(
                        openBrace: SyntaxNode(
                          leadingTrivia: [],
                          content: 0:0-0:0 ()
                        ),
                        parameters: [
                          [0]: Closure.Parameter(
                            identifier: SyntaxNode(
                              leadingTrivia: [],
                              content: 0:1-0:1 Identifier(value: "x")
                            ),
                            typeSignature: nil,
                            comma: SyntaxNode(
                              leadingTrivia: [],
                              content: 0:2-0:2 ()
                            )
                          ),
                          [1]: Closure.Parameter(
                            identifier: SyntaxNode(
                              leadingTrivia: [],
                              content: 0:3-0:3 Identifier(value: "y")
                            ),
                            typeSignature: nil,
                            comma: SyntaxNode(
                              leadingTrivia: [],
                              content: 0:4-0:4 ()
                            )
                          ),
                          [2]: Closure.Parameter(
                            identifier: SyntaxNode(
                              leadingTrivia: [],
                              content: 0:5-0:5 Identifier(value: "z")
                            ),
                            typeSignature: nil,
                            comma: nil
                          )
                        ],
                        inKeyword: SyntaxNode(
                          leadingTrivia: [
                            [0]: Whitespace(" ")
                          ],
                          content: 0:7-0:8 ()
                        ),
                        body: [
                          [0]: SyntaxNode(
                            leadingTrivia: [
                              [0]: Whitespace(" ")
                            ],
                            content: 0:10-0:10 ExprBlock.Element.expr(
                              Expr(
                                payload: Expr.Payload.literal(
                                  Literal.int32(1)
                                ),
                                annotation: EmptyAnnotation()
                              )
                            )
                          )
                        ],
                        closeBrace: SyntaxNode(
                          leadingTrivia: [],
                          content: 0:11-0:11 ()
                        )
                      )
                    ),
                    annotation: EmptyAnnotation()
                  )
                ),
                dot: SyntaxNode(
                  leadingTrivia: [],
                  content: 0:12-0:12 ()
                ),
                member: SyntaxNode(
                  leadingTrivia: [],
                  content: 0:13-0:23 Member.identifier(
                    Identifier(value: "description")
                  )
                )
              )
            ),
            annotation: EmptyAnnotation()
          )
        ),
        dot: SyntaxNode(
          leadingTrivia: [],
          content: 0:24-0:24 ()
        ),
        member: SyntaxNode(
          leadingTrivia: [],
          content: 0:25-0:35 Member.identifier(
            Identifier(value: "description")
          )
        )
      )
    ),
    annotation: EmptyAnnotation()
  )
)