SyntaxNode(
  leadingTrivia: [],
  content: 0:0-0:35 Expr(
    payload: Expr.Payload.tuple(
      DelimitedSequence(
        start: SyntaxNode(
          leadingTrivia: [],
          content: 0:0-0:0 ()
        ),
        elements: [
          [0]: DelimitedSequence.Element(
            content: SyntaxNode(
              leadingTrivia: [],
              content: 0:1-0:5 Expr(
                payload: Expr.Payload.literal(
                  Literal.string("foo")
                ),
                annotation: EmptyAnnotation()
              )
            ),
            separator: SyntaxNode(
              leadingTrivia: [],
              content: 0:6-0:6 ()
            )
          ),
          [1]: DelimitedSequence.Element(
            content: SyntaxNode(
              leadingTrivia: [
                [0]: Whitespace(" ")
              ],
              content: 0:8-0:34 Expr(
                payload: Expr.Payload.tuple(
                  DelimitedSequence(
                    start: SyntaxNode(
                      leadingTrivia: [
                        [0]: Whitespace(" ")
                      ],
                      content: 0:8-0:8 ()
                    ),
                    elements: [
                      [0]: DelimitedSequence.Element(
                        content: SyntaxNode(
                          leadingTrivia: [],
                          content: 0:9-0:13 Expr(
                            payload: Expr.Payload.literal(
                              Literal.string("bar")
                            ),
                            annotation: EmptyAnnotation()
                          )
                        ),
                        separator: SyntaxNode(
                          leadingTrivia: [],
                          content: 0:14-0:14 ()
                        )
                      ),
                      [1]: DelimitedSequence.Element(
                        content: SyntaxNode(
                          leadingTrivia: [
                            [0]: Whitespace(" ")
                          ],
                          content: 0:16-0:20 Expr(
                            payload: Expr.Payload.literal(
                              Literal.string("baz")
                            ),
                            annotation: EmptyAnnotation()
                          )
                        ),
                        separator: SyntaxNode(
                          leadingTrivia: [],
                          content: 0:21-0:21 ()
                        )
                      ),
                      [2]: DelimitedSequence.Element(
                        content: SyntaxNode(
                          leadingTrivia: [
                            [0]: Whitespace(" ")
                          ],
                          content: 0:23-0:33 Expr(
                            payload: Expr.Payload.tuple(
                              DelimitedSequence(
                                start: SyntaxNode(
                                  leadingTrivia: [
                                    [0]: Whitespace(" ")
                                  ],
                                  content: 0:23-0:23 ()
                                ),
                                elements: [
                                  [0]: DelimitedSequence.Element(
                                    content: SyntaxNode(
                                      leadingTrivia: [],
                                      content: 0:24-0:24 Expr(
                                        payload: Expr.Payload.literal(
                                          Literal.int32(1)
                                        ),
                                        annotation: EmptyAnnotation()
                                      )
                                    ),
                                    separator: SyntaxNode(
                                      leadingTrivia: [],
                                      content: 0:25-0:25 ()
                                    )
                                  ),
                                  [1]: DelimitedSequence.Element(
                                    content: SyntaxNode(
                                      leadingTrivia: [
                                        [0]: Whitespace(" ")
                                      ],
                                      content: 0:27-0:32 Expr(
                                        payload: Expr.Payload.literal(
                                          Literal.string("fizz")
                                        ),
                                        annotation: EmptyAnnotation()
                                      )
                                    ),
                                    separator: nil
                                  )
                                ],
                                end: SyntaxNode(
                                  leadingTrivia: [],
                                  content: 0:33-0:33 ()
                                )
                              )
                            ),
                            annotation: EmptyAnnotation()
                          )
                        ),
                        separator: nil
                      )
                    ],
                    end: SyntaxNode(
                      leadingTrivia: [],
                      content: 0:34-0:34 ()
                    )
                  )
                ),
                annotation: EmptyAnnotation()
              )
            ),
            separator: nil
          )
        ],
        end: SyntaxNode(
          leadingTrivia: [],
          content: 0:35-0:35 ()
        )
      )
    ),
    annotation: EmptyAnnotation()
  )
)