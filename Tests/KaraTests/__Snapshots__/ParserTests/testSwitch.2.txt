SyntaxNode(
  leadingTrivia: [],
  content: 0:0-3:0 Expr(
    payload: Expr.Payload.switch(
      Switch(
        switchKeyword: SyntaxNode(
          leadingTrivia: [],
          content: 0:0-0:5 ()
        ),
        subject: SyntaxNode(
          leadingTrivia: [
            [0]: Whitespace(" ")
          ],
          content: 0:7-0:7 Expr(
            payload: Expr.Payload.identifier(
              Identifier(value: "x")
            ),
            annotation: EmptyAnnotation()
          )
        ),
        openBrace: SyntaxNode(
          leadingTrivia: [],
          content: 0:8-0:8 ()
        ),
        caseBlocks: [
          [0]: Switch.CaseBlock(
            casePattern: CasePattern(
              caseKeyword: SyntaxNode(
                leadingTrivia: [
                  [0]: Whitespace("\n")
                ],
                content: 1:0-1:3 ()
              ),
              bindingKeyword: nil,
              pattern: SyntaxNode(
                leadingTrivia: [
                  [0]: Whitespace(" ")
                ],
                content: 1:5-1:8 Expr(
                  payload: Expr.Payload.literal(
                    Literal.bool(true)
                  ),
                  annotation: EmptyAnnotation()
                )
              )
            ),
            colon: SyntaxNode(
              leadingTrivia: [],
              content: 1:9-1:9 ()
            ),
            body: []
          ),
          [1]: Switch.CaseBlock(
            casePattern: CasePattern(
              caseKeyword: SyntaxNode(
                leadingTrivia: [
                  [0]: Whitespace("\n")
                ],
                content: 2:0-2:3 ()
              ),
              bindingKeyword: nil,
              pattern: SyntaxNode(
                leadingTrivia: [
                  [0]: Whitespace(" ")
                ],
                content: 2:5-2:9 Expr(
                  payload: Expr.Payload.literal(
                    Literal.bool(false)
                  ),
                  annotation: EmptyAnnotation()
                )
              )
            ),
            colon: SyntaxNode(
              leadingTrivia: [],
              content: 2:10-2:10 ()
            ),
            body: []
          )
        ],
        closeBrace: SyntaxNode(
          leadingTrivia: [
            [0]: Whitespace("\n")
          ],
          content: 3:0-3:0 ()
        )
      )
    ),
    annotation: EmptyAnnotation()
  )
)