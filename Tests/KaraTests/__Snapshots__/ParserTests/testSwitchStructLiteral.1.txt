SyntaxNode(
  leadingTrivia: [],
  content: 0:0-0:13 Expr(
    payload: Expr.Payload.structLiteral(
      StructLiteral(
        type: SyntaxNode(
          leadingTrivia: [],
          content: 0:0-0:10 Expr(
            payload: Expr.Payload.switch(
              Switch(
                switchKeyword: SyntaxNode(
                  leadingTrivia: [],
                  content: 0:0-0:5 ()
                ),
                subject: SyntaxNode(
                  leadingTrivia: [
                    [0]: Whitespace(" ")
                  ],
                  content: 0:7-0:7 Expr(
                    payload: Expr.Payload.identifier(
                      Identifier(value: "x")
                    ),
                    annotation: EmptyAnnotation()
                  )
                ),
                openBrace: SyntaxNode(
                  leadingTrivia: [
                    [0]: Whitespace(" ")
                  ],
                  content: 0:9-0:9 ()
                ),
                caseBlocks: [],
                closeBrace: SyntaxNode(
                  leadingTrivia: [],
                  content: 0:10-0:10 ()
                )
              )
            ),
            annotation: EmptyAnnotation()
          )
        ),
        elements: DelimitedSequence(
          start: SyntaxNode(
            leadingTrivia: [
              [0]: Whitespace(" ")
            ],
            content: 0:12-0:12 ()
          ),
          elements: [],
          end: SyntaxNode(
            leadingTrivia: [],
            content: 0:13-0:13 ()
          )
        )
      )
    ),
    annotation: EmptyAnnotation()
  )
)